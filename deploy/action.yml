name: deploy
description: Deploy on CloudFlare Pages
inputs:
  CF_ACCOUNT_ID:
    description: CloudFlare Account ID
    required: true
  CF_ZONE_ID:
    description: CloudFlare Zone ID
    required: false
  CF_CACHE_API_KEY:
    description: CloudFlare Cache Purge Key
    required: false
  CF_DEPLOY_API_KEY:
    description: CloudFlare Deploy Key
    required: true
  SENTRY_AUTH_TOKEN:
    description: Sentry Auth Token for sourcemaps
    required: true
  NOTIFICATION_URL:
    description: Notification Webhook URL
    required: true
runs:
  using: composite
  steps:
    - name: Build
      shell: bash
      run: |
        if grep -q "next-on-pages" package.json; then
          pnpm next-on-pages
          echo "kind=next-on-pages" >> $GITHUB_ENV
        else
          if grep -q "opennext" package.json; then
            pnpm opennextjs-cloudflare build
          fi
          echo "kind=worker" >> $GITHUB_ENV
        fi
      env:
        SENTRY_AUTH_TOKEN: ${{ inputs.SENTRY_AUTH_TOKEN }}

    - name: Ensure flags
      shell: bash
      run: |
        set -eux
        
        if [ ! -f wrangler.json ]; then
          echo "error: no wrangler.json found"
          exit 1
        fi
        
        cat wrangler.json | jq -r '.upload_source_maps' | grep -q "true"
        cat wrangler.json | jq -r '.observability.enabled' | grep -q "true"

    - name: Deploy (Next.js)
      id: deploy_next
      if: env.kind == 'next-on-pages'
      uses: cloudflare/wrangler-action@v3.14.1
      with:
        apiToken: ${{ inputs.CF_DEPLOY_API_KEY }}
        accountId: ${{ inputs.CF_ACCOUNT_ID }}
        command: pages deploy .vercel/output/static/
        workingDirectory: "."

    - name: Deploy (Worker)
      id: deploy_worker_main
      if: env.kind == 'worker' && github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: cloudflare/wrangler-action@v3.14.1
      with:
        apiToken: ${{ inputs.CF_DEPLOY_API_KEY }}
        accountId: ${{ inputs.CF_ACCOUNT_ID }}
        command: deploy
        workingDirectory: "."

    - name: Preview (Worker)
      id: deploy_worker_preview
      if: env.kind == 'worker' && ((github.event_name == 'push' && github.ref != 'refs/heads/main') || github.event_name == 'pull_request' || github.event_name == 'pull_request_target')
      uses: cloudflare/wrangler-action@v3.14.1
      with:
        apiToken: ${{ inputs.CF_DEPLOY_API_KEY }}
        accountId: ${{ inputs.CF_ACCOUNT_ID }}
        command: versions upload
        workingDirectory: "."

    - name: Check Deployment URL
      shell: bash
      run: |
        set -eux

        url="${{ steps.deploy_next.outputs.deployment-url }}"
        if [ -z "$url" ]; then
          url="${{ steps.deploy_worker_main.outputs.deployment-url }}"
        fi
        if [ -z "$url" ]; then
          url="${{ steps.deploy_worker_preview.outputs.deployment-url }}"
        fi

        echo "Deployment URL: $url"

        # check if it returns success
        sleep 10

        curl -fvs -H "Cookie: bypass=true" "$url"

    - name: Wait
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      shell: bash
      run: sleep 10

    - name: Purge Cloudflare Cache
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && inputs.CF_CACHE_API_KEY != '' && inputs.CF_ZONE_ID != ''
      shell: bash
      run: |
        set -eux
        res=$(curl -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/purge_cache" -H "Authorization: Bearer $CF_CACHE_API_KEY" -d '{ "purge_everything": true }')
        if ! echo "$res" | jq -e '.success'; then
          echo "$res" | jq -r '.errors[]'
          exit 1
        fi
        echo "Cache purged"
      env:
        CF_CACHE_API_KEY: ${{ inputs.CF_CACHE_API_KEY }}
        CF_ZONE_ID: ${{ inputs.CF_ZONE_ID }}

    - name: Notify
      uses: steebchen/actions/notify@main
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        message: deploy success ✅
        webhook_url: ${{ inputs.NOTIFICATION_URL }}

    - name: Notify
      uses: steebchen/actions/notify@main
      if: failure() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        message: deploy failed ❌
        webhook_url: ${{ inputs.NOTIFICATION_URL }}
